name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/iso20022-console-log
  DOCKER_TAG: ${{ github.sha }}

defaults:
  run:
    working-directory: ./

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B -ntp clean verify

      - name: Run tests
        run: mvn -B test

  build-and-push-docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-railway:
    name: Deploy to Railway
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Install Railway CLI
        run: |
          curl -fsSL https://cli.railway.app/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Link Railway project and service
        run: |
          railway link --project $RAILWAY_PROJECT_ID --service $RAILWAY_SERVICE_ID
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}

      - name: Update Railway service with new Docker image
        run: |
          railway variables set IMAGE=${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          railway up --service $RAILWAY_SERVICE_ID --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
