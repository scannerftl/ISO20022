name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  
env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/iso20022-console-log
  DOCKER_TAG: ${{ github.sha }}

defaults:
  run:
    working-directory: ./

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B -ntp clean verify

      - name: Run tests
        run: mvn -B test

  build-and-push-docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-railway:
    name: Deploy to Railway
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Deploy to Railway using API
        run: |
          # Mettre à jour la variable d'environnement IMAGE
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RAILWAY_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "key": "IMAGE",
              "value": "${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
            }' \
            "https://backboard.railway.app/graphql/v1?query=mutation+%7B%0A++upsertVariable%28%0A++++input%3A+%7B%0A++++++environmentId%3A+%22${{ secrets.RAILWAY_ENVIRONMENT_ID }}"%2C%0A++++++name%3A+%22IMAGE"%2C%0A++++++projectId%3A+%22${{ secrets.RAILWAY_PROJECT_ID }}"%2C%0A++++++serviceId%3A+%22${{ secrets.RAILWAY_SERVICE_ID }}"%2C%0A++++++value%3A+%22${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"%0A++++%7D%0A++%29+%7B%0A++++id%0A++%7D%0A%7D"
          
          # Déclencher le redéploiement
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RAILWAY_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"environmentId": "'${{ secrets.RAILWAY_ENVIRONMENT_ID }}'"}' \
            "https://backboard.railway.app/api/v1/services/${{ secrets.RAILWAY_SERVICE_ID }}/deployments"
